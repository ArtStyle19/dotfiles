set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'

## vimx need a symlink to resurrect
# set -g @resurrect-strategy-vimx 'session'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-auto-restore 'on'

set-option -g update-environment -r



######################################################TMUX NOVA

set -g @plugin 'o0th/tmux-nova'

set -g @nova-nerdfonts true
set -g @nova-nerdfonts-left 
set -g @nova-nerdfonts-right 

### Snow Vicari

set -g @nova-pane-active-border-style "#ffffff" #
set -g @nova-pane-border-style "#ffffff" 
set -g @nova-status-style-bg "#ffffff"
# set -g @nova-status-style-fg "#d8dee9"
set -g @nova-status-style-active-bg "#ffffff"
set -g @nova-status-style-active-fg "#ff0000"
# set -g @nova-status-style-active-bg "#{?client_prefix,#000000,#ffffff}"
# set -g @nova-status-style-active-fg "#{?client_prefix,#ffffff,#ff0000}"

# set -g @nova-status-style-active-fg "#40c4ff"
set -g @nova-status-style-fg "#000000"
set -g @nova-status-style-double-bg "#2d3540"


# set -g @nova-segment-mode "#{?client_prefix,Ω,挪威}"
set -g @nova-segment-mode "#{?client_prefix,挪威,挪威}"

# set -g @nova-segment-mode-colors " #ffffff #ff0000"
set -g @nova-segment-mode-colors "#{?client_prefix,#ffffff,#ffffff} #{?client_prefix,#ff0000,#000000}"  # Conditional colors

# set -g @nova-segment-whoami "#(whoami)@#h"
set -g @nova-segment-whoami "Vicari"
# set -g @nova-segment-whoami-colors " #40c4ff #000000"
# set -g @nova-segment-whoami-colors " #ffffff #000000"
set -g @nova-segment-whoami-colors "#{?client_prefix,#ffffff,#ffffff} #{?client_prefix,#ff0000,#000000}" 

set -g @nova-pane "#I#{?pane_in_mode, #{pane_mode},} #S ❯❯ #W"
# set -g @nova-pane "#{session_name}:#I #{?pane_in_mode, #{pane_mode},} #(basename #{pane_current_path}) #{?pane_current_command, #{pane_current_command}, ''} [#{strftime('%H:%M')}]"

# set -g @nova-pane "#{session_name}:#I | #(basename #{pane_current_path}) #{?pane_current_command, #{pane_current_command}, ''}"

# Simple pane name for normal mode
# set -g @nova-pane "#{session_name}:#I | #(basename #{pane_current_path} #{?client_prefix,#{?pane_current_command, #{pane_current_command}, #W})"

# set -g @nova-pane "#{?client_prefix, \
  #{session_name}:#I | #(basename #{pane_current_path}) #{?pane_current_command, #{pane_current_command}, ''} [#{strftime('%H:%M')}], \
  #{session_name}:#I | #(basename #{pane_current_path})}"

# set -g @nova-pane "#{?client_prefix, \
#   #{session_name}:#I | #{?pane_current_command, #{pane_current_command}, 'No Command Running'}, \
#   #{session_name}:#I | #(basename #{pane_current_path})}"


# set -g @nova-pane "#I#{?pane_in_mode, #{pane_mode},} #{?pane_current_command, #{pane_current_command}, #{basename #{pane_current_path}}}"
# set -g @nova-pane "#I: #{basename #{pane_current_path}} $(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo 'no-git') - #{?pane_current_command,#{pane_current_command},N/A}"

set -g @nova-rows 0
set -g @nova-segments-0-left "mode"
set -g @nova-segments-0-right "whoami"


########################## TRUE COLORS

# set-environment -g COLORTERM "truecolor"
set -ga terminal-overrides ",xterm-256color:Tc"

set-option -g default-shell /usr/bin/bash



########################## GENERAL CONF

 #set-option -g repeat-time 0
set-window-option -g mode-keys vi


# VIM KEYS
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R


# I3 KEYS
#bind -r l select-pane -U
#bind -r k select-pane -D
#bind -r j select-pane -L
#bind -r ';' select-pane -R


set -g mouse on 
# bind R source-file ~/.config/tmux/tmux.conf\; display-message "tmux config reloaded"
bind -n F12 if-shell -F '#{?pane_synchronized,1,0}' 'setw synchronize-panes off; display-message "Synchronized input OFF"' 'setw synchronize-panes on; display-message "Synchronized input ON"'
set-option -g display-time 700
run '~/.tmux/plugins/tpm/tpm'



######################### New Prefix

unbind C-b
set -g prefix C-t
bind C-t send-prefix




######################## SESSIONIZER

bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"
#imp projects
bind-key -r ` run-shell "~/.local/bin/tmux-sessionizer ~/"




######################## Start in 1

# Windows start at 1
set -g base-index 1
# Panes start at 1
setw -g pane-base-index 1
# Optional: renumber windows after closing
set-option -g renumber-windows on


